#pragma once

// ------------------------------------------------------------------------------------------------
#include <unordered_map>
#include <string>
#include <sleepy_discord/channel.h>

// ------------------------------------------------------------------------------------------------
#include "User.h"
#include "Common.hpp"
#include "Constants.h"

// ------------------------------------------------------------------------------------------------
using namespace Sqrat;

// ------------------------------------------------------------------------------------------------
namespace SqDiscord {

// ------------------------------------------------------------------------------------------------
class Channel {
public:
	std::string ID;
	std::string ServerID;
	int Position = 0;
	std::string Name;
	std::string Topic;
	bool isNSFW = false;
	std::unordered_map<std::string, User> Recipients;
	std::string OwnerID;
	std::string ParentID;

	ChannelType Type = CHANNEL_TYPE_NONE;

	// ------------------------------------------------------------------------------------------------
	Channel() = default;

	// ------------------------------------------------------------------------------------------------
	Channel(SleepyDiscord::Channel &channel);

	// ------------------------------------------------------------------------------------------------
	Channel(const Channel &o) = default;

	// ------------------------------------------------------------------------------------------------
	Channel(Channel &&o) = default;

	// ------------------------------------------------------------------------------------------------
	Channel &operator=(const Channel &o) = default;

	// ------------------------------------------------------------------------------------------------
	Channel &operator=(Channel &&o) = default;

	// ------------------------------------------------------------------------------------------------
	~Channel() = default;

	// ------------------------------------------------------------------------------------------------
	void UpdateRecipients(std::vector<SleepyDiscord::User> &recipients);

	// ------------------------------------------------------------------------------------------------
	std::string GetID() const;

	// ------------------------------------------------------------------------------------------------
	SQInteger GetType() const;

	// ------------------------------------------------------------------------------------------------
	CSStr GetServerID() const;

	// ------------------------------------------------------------------------------------------------
	int GetPosition() const;

	// ------------------------------------------------------------------------------------------------
	std::string GetName() const;

	// ------------------------------------------------------------------------------------------------
	std::string GetTopic() const;

	// ------------------------------------------------------------------------------------------------
	bool IsNsfw() const;

	SQInteger GetRecipientCount() const;

	// ------------------------------------------------------------------------------------------------
	Array GetRecipientsArray();

	// ------------------------------------------------------------------------------------------------
	Table GetRecipientsTable();

	// ------------------------------------------------------------------------------------------------
	std::string GetOwnerId() const;

	// ------------------------------------------------------------------------------------------------
	std::string GetParentId() const;

	// ------------------------------------------------------------------------------------------------
	static void Register_Channel(Table &table);
};
} // Namespace:: SqDiscord