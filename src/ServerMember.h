#pragma once

// ------------------------------------------------------------------------------------------------
#include <vector>
#include <string>
#include <sleepy_discord/server.h>

// ------------------------------------------------------------------------------------------------
#include "User.h"
#include "Common.hpp"

// ------------------------------------------------------------------------------------------------
namespace SqDiscord {

// ------------------------------------------------------------------------------------------------
typedef User DUser;

// ------------------------------------------------------------------------------------------------
class ServerMember {
public :
	std::string ID;
	DUser User;
	std::string Nick;
	std::vector<std::string> Roles;
	std::string JoinedAt;
	bool isDeaf = false;
	bool isMute = false;

	// ------------------------------------------------------------------------------------------------
	ServerMember() = default;

	// ------------------------------------------------------------------------------------------------
	ServerMember(SleepyDiscord::ServerMember &member);

	// ------------------------------------------------------------------------------------------------
	ServerMember(const ServerMember &o) = default;

	// ------------------------------------------------------------------------------------------------
	ServerMember(ServerMember &&o) = default;

	// ------------------------------------------------------------------------------------------------
	ServerMember &operator=(const ServerMember &o) = default;

	// ------------------------------------------------------------------------------------------------
	ServerMember &operator=(ServerMember &&o) = default;

	// ------------------------------------------------------------------------------------------------
	~ServerMember() = default;

	// ------------------------------------------------------------------------------------------------
	void UpdateRoles(std::vector<SleepyDiscord::Snowflake<SleepyDiscord::Role>> &roles);

	// ------------------------------------------------------------------------------------------------
	std::string GetID() const;

	// ------------------------------------------------------------------------------------------------
	LightObj GetUser();

	// ------------------------------------------------------------------------------------------------
	std::string GetNick() const;

	// ------------------------------------------------------------------------------------------------
	SQInteger GetRoleCount() const;

	// ------------------------------------------------------------------------------------------------
	Array GetRoles();

	// ------------------------------------------------------------------------------------------------
	std::string GetJoinedAt() const;

	// ------------------------------------------------------------------------------------------------
	bool IsDeaf() const;

	// ------------------------------------------------------------------------------------------------
	bool IsMute() const;

	// ------------------------------------------------------------------------------------------------
	static void Register_ServerMember(Table &table);
};
} //Namespace:: SqDiscord